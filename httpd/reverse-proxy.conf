LoadModule ssl_module modules/mod_ssl.so
LoadModule socache_shmcb_module modules/mod_socache_shmcb.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_connect_module modules/mod_proxy_connect.so
LoadModule proxy_ftp_module modules/mod_proxy_ftp.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so
LoadModule proxy_scgi_module modules/mod_proxy_scgi.so
LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
LoadModule proxy_express_module modules/mod_proxy_express.so
LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so
LoadModule lbmethod_bybusyness_module modules/mod_lbmethod_bybusyness.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
LoadModule status_module modules/mod_status.so

Listen 443

Header add Set-Cookie "ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/" env=BALANCER_ROUTE_CHANGED

SSLPassPhraseDialog builtin
SSLSessionCache shmcb:/var/cache/mod_ssl/scache(512000)
SSLSessionCacheTimeout 300
SSLRandomSeed startup file:/dev/urandom 256
SSLRandomSeed connect builtin
SSLCryptoDevice builtin

<Proxy balancer://clusterportal>

        # BalancerMembers
        
       Order deny,allow
       Allow from all
</Proxy>

<VirtualHost *:80>
    RewriteEngine On
    RewriteOptions Inherit

    RewriteRule (.*) https://%{HTTP_HOST}$1 [R=301,L]

</VirtualHost>

<VirtualHost *:443>

    SSLEngine on
    
    SSLProtocol all -SSLv2
    SSLCipherSuite ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM:+LOW
    
    SSLCertificateFile /etc/ssl/server.crt
    SSLCertificateKeyFile /etc/ssl/server.key



    ProxyPreserveHost On
    RewriteEngine On
    RewriteOptions Inherit

    DirectoryIndex /portal

    ProxyPass /nuxeo http://NUXEO_HOST:8080/nuxeo
    ProxyPassReverse /nuxeo  http://NUXEO_HOST:8080/nuxeo

    ProxyPass /cas http://CAS_HOST:8080/cas
    ProxyPassReverse /cas  http://CAS_HOST:8080/cas

    ProxyPass      /portal                      balancer://clusterportal/portal stickysession=ROUTEID  
    ProxyPassMatch ^/(.+)/(.*)-adapt-.*\.(css|js)$  balancer://clusterportal/$1/$2.$3 stickysession=ROUTEID 
    ProxyPassMatch ^/(demo(-[a-z])+.*)$         balancer://clusterportal/$1 stickysession=ROUTEID 
    ProxyPassMatch ^/(index(-[a-z])+.*)$        balancer://clusterportal/$1 stickysession=ROUTEID 
    ProxyPassMatch ^/(portal(-[a-z])+.*)$       balancer://clusterportal/$1 stickysession=ROUTEID
    ProxyPassMatch ^/(osivia(-[a-z])+.*)$       balancer://clusterportal/$1 stickysession=ROUTEID 
    ProxyPassMatch ^/(toutatice(-[a-z])+.*)$    balancer://clusterportal/$1 stickysession=ROUTEID 

    SetEnvIf Host (.*) the_host=$1
    RequestHeader set osivia-virtual-host "https://%{the_host}e"
    RequestHeader set nuxeo-virtual-host "https://%{the_host}e/"
    RequestHeader set X-Forwarded-Proto "https"


</VirtualHost>

<Location /onlyoffice>

    Require all granted
    SetEnvIf Host "^(.*)$" THE_HOST=$1

    # Si pas de proto, ajout https par défaut
    SetEnvIf X-Forwarded-Proto ^$ no_proto
    RequestHeader set X-Forwarded-Proto https env=no_proto

    # Si pas de host, ajout du host appelant  par défaut
    SetEnvIf X-Forwarded-Host ^$ no_host
    RequestHeader set X-Forwarded-Host %{THE_HOST}e env=no_host

    # Ajout location après url du host
    RequestHeader edit X-Forwarded-Host (.*) $1/onlyoffice
    ProxyAddHeaders Off
</Location>

<Location /server-status>
   SetHandler server-status
   order deny,allow
   allow from all
</Location>


<Location "/balancer-manager">
    SetHandler balancer-manager
    #Require host example.com
</Location>

ProxyPassMatch ^\/onlyoffice(.*)(\/websocket)$ "ws://OO_HOST$1$2"
ProxyPass /onlyoffice "http://OO_HOST"
ProxyPassReverse /onlyoffice "http://OO_HOST"


# callback to portal web services (visionneuse)

Listen 81

<VirtualHost *:81>

    ProxyPreserveHost On
    RewriteEngine On
    RewriteOptions Inherit

    DirectoryIndex /portal

    ProxyPass      /portal                      balancer://clusterportal/portal stickysession=ROUTEID 
    ProxyPassMatch ^/(.+)/(.*)-adapt-.*\.(css|js)$  balancer://clusterportal/$1/$2.$3 stickysession=ROUTEID 
    ProxyPassMatch ^/(demo(-[a-z])+.*)$         balancer://clusterportal/$1 stickysession=ROUTEID 
    ProxyPassMatch ^/(index(-[a-z])+.*)$        balancer://clusterportal/$1 stickysession=ROUTEID 
    ProxyPassMatch ^/(portal(-[a-z])+.*)$       balancer://clusterportal/$1 stickysession=ROUTEID 
    ProxyPassMatch ^/(osivia(-[a-z])+.*)$       balancer://clusterportal/$1 stickysession=ROUTEID 
    ProxyPassMatch ^/(toutatice(-[a-z])+.*)$    balancer://clusterportal/$1 stickysession=ROUTEID 

    SetEnvIf Host (.*) the_host=$1
    RequestHeader set osivia-virtual-host "http://%{the_host}e"
    RequestHeader set nuxeo-virtual-host "http://%{the_host}e/"

</VirtualHost>

